#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DocumentManager")]
	public partial class DocumentManageDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertDetailDocument(DetailDocument instance);
    partial void UpdateDetailDocument(DetailDocument instance);
    partial void DeleteDetailDocument(DetailDocument instance);
    partial void InsertDetailDocumentExport(DetailDocumentExport instance);
    partial void UpdateDetailDocumentExport(DetailDocumentExport instance);
    partial void DeleteDetailDocumentExport(DetailDocumentExport instance);
    partial void InsertDocument(Document instance);
    partial void UpdateDocument(Document instance);
    partial void DeleteDocument(Document instance);
    partial void InsertDocumentExport(DocumentExport instance);
    partial void UpdateDocumentExport(DocumentExport instance);
    partial void DeleteDocumentExport(DocumentExport instance);
    #endregion
		
		public DocumentManageDataContext() : 
				base(global::DAL.Properties.Settings.Default.DocumentManagerConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DocumentManageDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DocumentManageDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DocumentManageDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DocumentManageDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<DetailDocument> DetailDocuments
		{
			get
			{
				return this.GetTable<DetailDocument>();
			}
		}
		
		public System.Data.Linq.Table<DetailDocumentExport> DetailDocumentExports
		{
			get
			{
				return this.GetTable<DetailDocumentExport>();
			}
		}
		
		public System.Data.Linq.Table<Document> Documents
		{
			get
			{
				return this.GetTable<Document>();
			}
		}
		
		public System.Data.Linq.Table<DocumentExport> DocumentExports
		{
			get
			{
				return this.GetTable<DocumentExport>();
			}
		}
		
		public System.Data.Linq.Table<InforDocumentExport> InforDocumentExports
		{
			get
			{
				return this.GetTable<InforDocumentExport>();
			}
		}
		
		public System.Data.Linq.Table<InforDocument> InforDocuments
		{
			get
			{
				return this.GetTable<InforDocument>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDDepart;
		
		private string _DepartName;
		
		private string _Description;
		
		private System.Nullable<bool> _HD;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDepartChanging(string value);
    partial void OnIDDepartChanged();
    partial void OnDepartNameChanging(string value);
    partial void OnDepartNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnHDChanging(System.Nullable<bool> value);
    partial void OnHDChanged();
    #endregion
		
		public Department()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDepart", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDDepart
		{
			get
			{
				return this._IDDepart;
			}
			set
			{
				if ((this._IDDepart != value))
				{
					this.OnIDDepartChanging(value);
					this.SendPropertyChanging();
					this._IDDepart = value;
					this.SendPropertyChanged("IDDepart");
					this.OnIDDepartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartName", DbType="NVarChar(50)")]
		public string DepartName
		{
			get
			{
				return this._DepartName;
			}
			set
			{
				if ((this._DepartName != value))
				{
					this.OnDepartNameChanging(value);
					this.SendPropertyChanging();
					this._DepartName = value;
					this.SendPropertyChanged("DepartName");
					this.OnDepartNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD", DbType="Bit")]
		public System.Nullable<bool> HD
		{
			get
			{
				return this._HD;
			}
			set
			{
				if ((this._HD != value))
				{
					this.OnHDChanging(value);
					this.SendPropertyChanging();
					this._HD = value;
					this.SendPropertyChanged("HD");
					this.OnHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Employees", ThisKey="IDDepart", OtherKey="IDDepart")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDEmployee;
		
		private string _EmployeeName;
		
		private string _IDDepart;
		
		private EntitySet<Document> _Documents;
		
		private EntitySet<DocumentExport> _DocumentExports;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEmployeeChanging(int value);
    partial void OnIDEmployeeChanged();
    partial void OnEmployeeNameChanging(string value);
    partial void OnEmployeeNameChanged();
    partial void OnIDDepartChanging(string value);
    partial void OnIDDepartChanged();
    #endregion
		
		public Employee()
		{
			this._Documents = new EntitySet<Document>(new Action<Document>(this.attach_Documents), new Action<Document>(this.detach_Documents));
			this._DocumentExports = new EntitySet<DocumentExport>(new Action<DocumentExport>(this.attach_DocumentExports), new Action<DocumentExport>(this.detach_DocumentExports));
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmployee", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDEmployee
		{
			get
			{
				return this._IDEmployee;
			}
			set
			{
				if ((this._IDEmployee != value))
				{
					this.OnIDEmployeeChanging(value);
					this.SendPropertyChanging();
					this._IDEmployee = value;
					this.SendPropertyChanged("IDEmployee");
					this.OnIDEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(50)")]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this.OnEmployeeNameChanging(value);
					this.SendPropertyChanging();
					this._EmployeeName = value;
					this.SendPropertyChanged("EmployeeName");
					this.OnEmployeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDepart", DbType="VarChar(10)")]
		public string IDDepart
		{
			get
			{
				return this._IDDepart;
			}
			set
			{
				if ((this._IDDepart != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDepartChanging(value);
					this.SendPropertyChanging();
					this._IDDepart = value;
					this.SendPropertyChanged("IDDepart");
					this.OnIDDepartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Document", Storage="_Documents", ThisKey="IDEmployee", OtherKey="IDEmployee")]
		public EntitySet<Document> Documents
		{
			get
			{
				return this._Documents;
			}
			set
			{
				this._Documents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_DocumentExport", Storage="_DocumentExports", ThisKey="IDEmployee", OtherKey="IDEmployee")]
		public EntitySet<DocumentExport> DocumentExports
		{
			get
			{
				return this._DocumentExports;
			}
			set
			{
				this._DocumentExports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Department", ThisKey="IDDepart", OtherKey="IDDepart", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._IDDepart = value.IDDepart;
					}
					else
					{
						this._IDDepart = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_DocumentExports(DocumentExport entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_DocumentExports(DocumentExport entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetailDocument")]
	public partial class DetailDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDetail;
		
		private string _StyleNo;
		
		private string _MaterialStyle;
		
		private string _MaterialDetails;
		
		private string _Unit;
		
		private System.Nullable<double> _NumberRequest;
		
		private System.Nullable<double> _NumberReceived;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _TotalAmount;
		
		private System.Nullable<int> _IDDocument;
		
		private EntityRef<Document> _Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDetailChanging(int value);
    partial void OnIDDetailChanged();
    partial void OnStyleNoChanging(string value);
    partial void OnStyleNoChanged();
    partial void OnMaterialStyleChanging(string value);
    partial void OnMaterialStyleChanged();
    partial void OnMaterialDetailsChanging(string value);
    partial void OnMaterialDetailsChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnNumberRequestChanging(System.Nullable<double> value);
    partial void OnNumberRequestChanged();
    partial void OnNumberReceivedChanging(System.Nullable<double> value);
    partial void OnNumberReceivedChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTotalAmountChanged();
    partial void OnIDDocumentChanging(System.Nullable<int> value);
    partial void OnIDDocumentChanged();
    #endregion
		
		public DetailDocument()
		{
			this._Document = default(EntityRef<Document>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDetail", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDDetail
		{
			get
			{
				return this._IDDetail;
			}
			set
			{
				if ((this._IDDetail != value))
				{
					this.OnIDDetailChanging(value);
					this.SendPropertyChanging();
					this._IDDetail = value;
					this.SendPropertyChanged("IDDetail");
					this.OnIDDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StyleNo", DbType="NVarChar(50)")]
		public string StyleNo
		{
			get
			{
				return this._StyleNo;
			}
			set
			{
				if ((this._StyleNo != value))
				{
					this.OnStyleNoChanging(value);
					this.SendPropertyChanging();
					this._StyleNo = value;
					this.SendPropertyChanged("StyleNo");
					this.OnStyleNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialStyle", DbType="NVarChar(50)")]
		public string MaterialStyle
		{
			get
			{
				return this._MaterialStyle;
			}
			set
			{
				if ((this._MaterialStyle != value))
				{
					this.OnMaterialStyleChanging(value);
					this.SendPropertyChanging();
					this._MaterialStyle = value;
					this.SendPropertyChanged("MaterialStyle");
					this.OnMaterialStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialDetails", DbType="NVarChar(200)")]
		public string MaterialDetails
		{
			get
			{
				return this._MaterialDetails;
			}
			set
			{
				if ((this._MaterialDetails != value))
				{
					this.OnMaterialDetailsChanging(value);
					this.SendPropertyChanging();
					this._MaterialDetails = value;
					this.SendPropertyChanged("MaterialDetails");
					this.OnMaterialDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(20)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberRequest", DbType="Float")]
		public System.Nullable<double> NumberRequest
		{
			get
			{
				return this._NumberRequest;
			}
			set
			{
				if ((this._NumberRequest != value))
				{
					this.OnNumberRequestChanging(value);
					this.SendPropertyChanging();
					this._NumberRequest = value;
					this.SendPropertyChanged("NumberRequest");
					this.OnNumberRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberReceived", DbType="Float")]
		public System.Nullable<double> NumberReceived
		{
			get
			{
				return this._NumberReceived;
			}
			set
			{
				if ((this._NumberReceived != value))
				{
					this.OnNumberReceivedChanging(value);
					this.SendPropertyChanging();
					this._NumberReceived = value;
					this.SendPropertyChanged("NumberReceived");
					this.OnNumberReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDocument", DbType="Int")]
		public System.Nullable<int> IDDocument
		{
			get
			{
				return this._IDDocument;
			}
			set
			{
				if ((this._IDDocument != value))
				{
					if (this._Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDocumentChanging(value);
					this.SendPropertyChanging();
					this._IDDocument = value;
					this.SendPropertyChanged("IDDocument");
					this.OnIDDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_DetailDocument", Storage="_Document", ThisKey="IDDocument", OtherKey="IDDocument", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.DetailDocuments.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.DetailDocuments.Add(this);
						this._IDDocument = value.IDDocument;
					}
					else
					{
						this._IDDocument = default(Nullable<int>);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetailDocumentExport")]
	public partial class DetailDocumentExport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDetail;
		
		private string _StyleNo;
		
		private string _MaterialStyle;
		
		private string _MaterialDetails;
		
		private string _Unit;
		
		private System.Nullable<double> _NumberRequest;
		
		private System.Nullable<double> _NumberReceived;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _TotalAmount;
		
		private System.Nullable<int> _IDDocument;
		
		private EntityRef<DocumentExport> _DocumentExport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDetailChanging(int value);
    partial void OnIDDetailChanged();
    partial void OnStyleNoChanging(string value);
    partial void OnStyleNoChanged();
    partial void OnMaterialStyleChanging(string value);
    partial void OnMaterialStyleChanged();
    partial void OnMaterialDetailsChanging(string value);
    partial void OnMaterialDetailsChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnNumberRequestChanging(System.Nullable<double> value);
    partial void OnNumberRequestChanged();
    partial void OnNumberReceivedChanging(System.Nullable<double> value);
    partial void OnNumberReceivedChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTotalAmountChanged();
    partial void OnIDDocumentChanging(System.Nullable<int> value);
    partial void OnIDDocumentChanged();
    #endregion
		
		public DetailDocumentExport()
		{
			this._DocumentExport = default(EntityRef<DocumentExport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDetail", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDDetail
		{
			get
			{
				return this._IDDetail;
			}
			set
			{
				if ((this._IDDetail != value))
				{
					this.OnIDDetailChanging(value);
					this.SendPropertyChanging();
					this._IDDetail = value;
					this.SendPropertyChanged("IDDetail");
					this.OnIDDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StyleNo", DbType="NVarChar(50)")]
		public string StyleNo
		{
			get
			{
				return this._StyleNo;
			}
			set
			{
				if ((this._StyleNo != value))
				{
					this.OnStyleNoChanging(value);
					this.SendPropertyChanging();
					this._StyleNo = value;
					this.SendPropertyChanged("StyleNo");
					this.OnStyleNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialStyle", DbType="NVarChar(50)")]
		public string MaterialStyle
		{
			get
			{
				return this._MaterialStyle;
			}
			set
			{
				if ((this._MaterialStyle != value))
				{
					this.OnMaterialStyleChanging(value);
					this.SendPropertyChanging();
					this._MaterialStyle = value;
					this.SendPropertyChanged("MaterialStyle");
					this.OnMaterialStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialDetails", DbType="NVarChar(200)")]
		public string MaterialDetails
		{
			get
			{
				return this._MaterialDetails;
			}
			set
			{
				if ((this._MaterialDetails != value))
				{
					this.OnMaterialDetailsChanging(value);
					this.SendPropertyChanging();
					this._MaterialDetails = value;
					this.SendPropertyChanged("MaterialDetails");
					this.OnMaterialDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(20)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberRequest", DbType="Float")]
		public System.Nullable<double> NumberRequest
		{
			get
			{
				return this._NumberRequest;
			}
			set
			{
				if ((this._NumberRequest != value))
				{
					this.OnNumberRequestChanging(value);
					this.SendPropertyChanging();
					this._NumberRequest = value;
					this.SendPropertyChanged("NumberRequest");
					this.OnNumberRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberReceived", DbType="Float")]
		public System.Nullable<double> NumberReceived
		{
			get
			{
				return this._NumberReceived;
			}
			set
			{
				if ((this._NumberReceived != value))
				{
					this.OnNumberReceivedChanging(value);
					this.SendPropertyChanging();
					this._NumberReceived = value;
					this.SendPropertyChanged("NumberReceived");
					this.OnNumberReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDocument", DbType="Int")]
		public System.Nullable<int> IDDocument
		{
			get
			{
				return this._IDDocument;
			}
			set
			{
				if ((this._IDDocument != value))
				{
					if (this._DocumentExport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDocumentChanging(value);
					this.SendPropertyChanging();
					this._IDDocument = value;
					this.SendPropertyChanged("IDDocument");
					this.OnIDDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentExport_DetailDocumentExport", Storage="_DocumentExport", ThisKey="IDDocument", OtherKey="IDDocument", IsForeignKey=true)]
		public DocumentExport DocumentExport
		{
			get
			{
				return this._DocumentExport.Entity;
			}
			set
			{
				DocumentExport previousValue = this._DocumentExport.Entity;
				if (((previousValue != value) 
							|| (this._DocumentExport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentExport.Entity = null;
						previousValue.DetailDocumentExports.Remove(this);
					}
					this._DocumentExport.Entity = value;
					if ((value != null))
					{
						value.DetailDocumentExports.Add(this);
						this._IDDocument = value.IDDocument;
					}
					else
					{
						this._IDDocument = default(Nullable<int>);
					}
					this.SendPropertyChanged("DocumentExport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Document")]
	public partial class Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDocument;
		
		private string _DocumentNumber;
		
		private string _NoTK;
		
		private string _CoTK;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _FromStore;
		
		private string _ToStore;
		
		private string _Description;
		
		private System.Nullable<int> _IDEmployee;
		
		private EntitySet<DetailDocument> _DetailDocuments;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDocumentChanging(int value);
    partial void OnIDDocumentChanged();
    partial void OnDocumentNumberChanging(string value);
    partial void OnDocumentNumberChanged();
    partial void OnNoTKChanging(string value);
    partial void OnNoTKChanged();
    partial void OnCoTKChanging(string value);
    partial void OnCoTKChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnFromStoreChanging(string value);
    partial void OnFromStoreChanged();
    partial void OnToStoreChanging(string value);
    partial void OnToStoreChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIDEmployeeChanging(System.Nullable<int> value);
    partial void OnIDEmployeeChanged();
    #endregion
		
		public Document()
		{
			this._DetailDocuments = new EntitySet<DetailDocument>(new Action<DetailDocument>(this.attach_DetailDocuments), new Action<DetailDocument>(this.detach_DetailDocuments));
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDocument", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDDocument
		{
			get
			{
				return this._IDDocument;
			}
			set
			{
				if ((this._IDDocument != value))
				{
					this.OnIDDocumentChanging(value);
					this.SendPropertyChanging();
					this._IDDocument = value;
					this.SendPropertyChanged("IDDocument");
					this.OnIDDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="NVarChar(50)")]
		public string DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this.OnDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._DocumentNumber = value;
					this.SendPropertyChanged("DocumentNumber");
					this.OnDocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoTK", DbType="NVarChar(50)")]
		public string NoTK
		{
			get
			{
				return this._NoTK;
			}
			set
			{
				if ((this._NoTK != value))
				{
					this.OnNoTKChanging(value);
					this.SendPropertyChanging();
					this._NoTK = value;
					this.SendPropertyChanged("NoTK");
					this.OnNoTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoTK", DbType="NVarChar(50)")]
		public string CoTK
		{
			get
			{
				return this._CoTK;
			}
			set
			{
				if ((this._CoTK != value))
				{
					this.OnCoTKChanging(value);
					this.SendPropertyChanging();
					this._CoTK = value;
					this.SendPropertyChanged("CoTK");
					this.OnCoTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromStore", DbType="NVarChar(100)")]
		public string FromStore
		{
			get
			{
				return this._FromStore;
			}
			set
			{
				if ((this._FromStore != value))
				{
					this.OnFromStoreChanging(value);
					this.SendPropertyChanging();
					this._FromStore = value;
					this.SendPropertyChanged("FromStore");
					this.OnFromStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToStore", DbType="NVarChar(100)")]
		public string ToStore
		{
			get
			{
				return this._ToStore;
			}
			set
			{
				if ((this._ToStore != value))
				{
					this.OnToStoreChanging(value);
					this.SendPropertyChanging();
					this._ToStore = value;
					this.SendPropertyChanged("ToStore");
					this.OnToStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(150)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmployee", DbType="Int")]
		public System.Nullable<int> IDEmployee
		{
			get
			{
				return this._IDEmployee;
			}
			set
			{
				if ((this._IDEmployee != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEmployeeChanging(value);
					this.SendPropertyChanging();
					this._IDEmployee = value;
					this.SendPropertyChanged("IDEmployee");
					this.OnIDEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_DetailDocument", Storage="_DetailDocuments", ThisKey="IDDocument", OtherKey="IDDocument")]
		public EntitySet<DetailDocument> DetailDocuments
		{
			get
			{
				return this._DetailDocuments;
			}
			set
			{
				this._DetailDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Document", Storage="_Employee", ThisKey="IDEmployee", OtherKey="IDEmployee", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Documents.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Documents.Add(this);
						this._IDEmployee = value.IDEmployee;
					}
					else
					{
						this._IDEmployee = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailDocuments(DetailDocument entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_DetailDocuments(DetailDocument entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentExport")]
	public partial class DocumentExport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDocument;
		
		private string _DocumentNumber;
		
		private string _NoTK;
		
		private string _CoTK;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _FromStore;
		
		private string _ToStore;
		
		private string _Description;
		
		private System.Nullable<int> _IDEmployee;
		
		private EntitySet<DetailDocumentExport> _DetailDocumentExports;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDocumentChanging(int value);
    partial void OnIDDocumentChanged();
    partial void OnDocumentNumberChanging(string value);
    partial void OnDocumentNumberChanged();
    partial void OnNoTKChanging(string value);
    partial void OnNoTKChanged();
    partial void OnCoTKChanging(string value);
    partial void OnCoTKChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnFromStoreChanging(string value);
    partial void OnFromStoreChanged();
    partial void OnToStoreChanging(string value);
    partial void OnToStoreChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIDEmployeeChanging(System.Nullable<int> value);
    partial void OnIDEmployeeChanged();
    #endregion
		
		public DocumentExport()
		{
			this._DetailDocumentExports = new EntitySet<DetailDocumentExport>(new Action<DetailDocumentExport>(this.attach_DetailDocumentExports), new Action<DetailDocumentExport>(this.detach_DetailDocumentExports));
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDocument", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDDocument
		{
			get
			{
				return this._IDDocument;
			}
			set
			{
				if ((this._IDDocument != value))
				{
					this.OnIDDocumentChanging(value);
					this.SendPropertyChanging();
					this._IDDocument = value;
					this.SendPropertyChanged("IDDocument");
					this.OnIDDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="NVarChar(50)")]
		public string DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this.OnDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._DocumentNumber = value;
					this.SendPropertyChanged("DocumentNumber");
					this.OnDocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoTK", DbType="NVarChar(50)")]
		public string NoTK
		{
			get
			{
				return this._NoTK;
			}
			set
			{
				if ((this._NoTK != value))
				{
					this.OnNoTKChanging(value);
					this.SendPropertyChanging();
					this._NoTK = value;
					this.SendPropertyChanged("NoTK");
					this.OnNoTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoTK", DbType="NVarChar(50)")]
		public string CoTK
		{
			get
			{
				return this._CoTK;
			}
			set
			{
				if ((this._CoTK != value))
				{
					this.OnCoTKChanging(value);
					this.SendPropertyChanging();
					this._CoTK = value;
					this.SendPropertyChanged("CoTK");
					this.OnCoTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromStore", DbType="NVarChar(100)")]
		public string FromStore
		{
			get
			{
				return this._FromStore;
			}
			set
			{
				if ((this._FromStore != value))
				{
					this.OnFromStoreChanging(value);
					this.SendPropertyChanging();
					this._FromStore = value;
					this.SendPropertyChanged("FromStore");
					this.OnFromStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToStore", DbType="NVarChar(100)")]
		public string ToStore
		{
			get
			{
				return this._ToStore;
			}
			set
			{
				if ((this._ToStore != value))
				{
					this.OnToStoreChanging(value);
					this.SendPropertyChanging();
					this._ToStore = value;
					this.SendPropertyChanged("ToStore");
					this.OnToStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(150)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmployee", DbType="Int")]
		public System.Nullable<int> IDEmployee
		{
			get
			{
				return this._IDEmployee;
			}
			set
			{
				if ((this._IDEmployee != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEmployeeChanging(value);
					this.SendPropertyChanging();
					this._IDEmployee = value;
					this.SendPropertyChanged("IDEmployee");
					this.OnIDEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentExport_DetailDocumentExport", Storage="_DetailDocumentExports", ThisKey="IDDocument", OtherKey="IDDocument")]
		public EntitySet<DetailDocumentExport> DetailDocumentExports
		{
			get
			{
				return this._DetailDocumentExports;
			}
			set
			{
				this._DetailDocumentExports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_DocumentExport", Storage="_Employee", ThisKey="IDEmployee", OtherKey="IDEmployee", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.DocumentExports.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.DocumentExports.Add(this);
						this._IDEmployee = value.IDEmployee;
					}
					else
					{
						this._IDEmployee = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetailDocumentExports(DetailDocumentExport entity)
		{
			this.SendPropertyChanging();
			entity.DocumentExport = this;
		}
		
		private void detach_DetailDocumentExports(DetailDocumentExport entity)
		{
			this.SendPropertyChanging();
			entity.DocumentExport = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InforDocumentExport")]
	public partial class InforDocumentExport
	{
		
		private int _IDDocument;
		
		private string _DocumentNumber;
		
		private string _NoTK;
		
		private string _CoTK;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _FromStore;
		
		private string _ToStore;
		
		private string _Description;
		
		private System.Nullable<int> _IDEmployee;
		
		private string _EmployeeName;
		
		private string _IDDepart;
		
		public InforDocumentExport()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDocument", DbType="Int NOT NULL")]
		public int IDDocument
		{
			get
			{
				return this._IDDocument;
			}
			set
			{
				if ((this._IDDocument != value))
				{
					this._IDDocument = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="NVarChar(50)")]
		public string DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this._DocumentNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoTK", DbType="NVarChar(50)")]
		public string NoTK
		{
			get
			{
				return this._NoTK;
			}
			set
			{
				if ((this._NoTK != value))
				{
					this._NoTK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoTK", DbType="NVarChar(50)")]
		public string CoTK
		{
			get
			{
				return this._CoTK;
			}
			set
			{
				if ((this._CoTK != value))
				{
					this._CoTK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromStore", DbType="NVarChar(100)")]
		public string FromStore
		{
			get
			{
				return this._FromStore;
			}
			set
			{
				if ((this._FromStore != value))
				{
					this._FromStore = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToStore", DbType="NVarChar(100)")]
		public string ToStore
		{
			get
			{
				return this._ToStore;
			}
			set
			{
				if ((this._ToStore != value))
				{
					this._ToStore = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(150)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmployee", DbType="Int")]
		public System.Nullable<int> IDEmployee
		{
			get
			{
				return this._IDEmployee;
			}
			set
			{
				if ((this._IDEmployee != value))
				{
					this._IDEmployee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(50)")]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDepart", DbType="VarChar(10)")]
		public string IDDepart
		{
			get
			{
				return this._IDDepart;
			}
			set
			{
				if ((this._IDDepart != value))
				{
					this._IDDepart = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InforDocument")]
	public partial class InforDocument
	{
		
		private int _IDDocument;
		
		private string _DocumentNumber;
		
		private string _NoTK;
		
		private string _CoTK;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _FromStore;
		
		private string _ToStore;
		
		private string _Description;
		
		private System.Nullable<int> _IDEmployee;
		
		private string _EmployeeName;
		
		private string _IDDepart;
		
		public InforDocument()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDocument", DbType="Int NOT NULL")]
		public int IDDocument
		{
			get
			{
				return this._IDDocument;
			}
			set
			{
				if ((this._IDDocument != value))
				{
					this._IDDocument = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="NVarChar(50)")]
		public string DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this._DocumentNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoTK", DbType="NVarChar(50)")]
		public string NoTK
		{
			get
			{
				return this._NoTK;
			}
			set
			{
				if ((this._NoTK != value))
				{
					this._NoTK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoTK", DbType="NVarChar(50)")]
		public string CoTK
		{
			get
			{
				return this._CoTK;
			}
			set
			{
				if ((this._CoTK != value))
				{
					this._CoTK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromStore", DbType="NVarChar(100)")]
		public string FromStore
		{
			get
			{
				return this._FromStore;
			}
			set
			{
				if ((this._FromStore != value))
				{
					this._FromStore = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToStore", DbType="NVarChar(100)")]
		public string ToStore
		{
			get
			{
				return this._ToStore;
			}
			set
			{
				if ((this._ToStore != value))
				{
					this._ToStore = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(150)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmployee", DbType="Int")]
		public System.Nullable<int> IDEmployee
		{
			get
			{
				return this._IDEmployee;
			}
			set
			{
				if ((this._IDEmployee != value))
				{
					this._IDEmployee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(50)")]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this._EmployeeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDepart", DbType="VarChar(10)")]
		public string IDDepart
		{
			get
			{
				return this._IDDepart;
			}
			set
			{
				if ((this._IDDepart != value))
				{
					this._IDDepart = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
